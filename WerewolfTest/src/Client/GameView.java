/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author jessica
 */
public class GameView extends javax.swing.JFrame {

    /**
     * Creates new form GameView
     */
    private PrintWriter out;
    private BufferedReader in;
    private boolean isReadyButtonClicked = false;
    private String role;
    private boolean isDay;
    private boolean isAlive;
    private boolean voteNow;
    private String username;
    private String friend;
    
    public GameView() {
        initComponents();
        jPanel1.setVisible(false);
        jScrollPane1.setVisible(false);
        playerList.setVisible(false);
        leaveButton.setVisible(false);
        voteButton.setVisible(false);
        playersLabel.setVisible(false);
        roundLabel.setVisible(false);
        phaseLabel.setVisible(false);
        roleLabel.setVisible(false);
        statusLabel.setVisible(false);
        usernameLabel.setVisible(false);
        activePlayers.setVisible(false);
        this.revalidate();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        readyPane = new javax.swing.JPanel();
        readyButton = new javax.swing.JButton();
        leaveButton = new javax.swing.JButton();
        voteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        playerList = new javax.swing.JTextArea();
        playersLabel = new javax.swing.JLabel();
        roundLabel = new javax.swing.JLabel();
        roleLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        phaseLabel = new javax.swing.JLabel();
        activePlayers = new javax.swing.JComboBox<>();
        statusLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Werewolf Hunter");
        setBackground(new java.awt.Color(153, 204, 255));
        setMaximumSize(new java.awt.Dimension(1366, 768));

        readyPane.setPreferredSize(new java.awt.Dimension(600, 480));

        readyButton.setFont(new java.awt.Font("Frank", 0, 24)); // NOI18N
        readyButton.setForeground(new java.awt.Color(255, 102, 102));
        readyButton.setText("Ready");
        readyButton.setPreferredSize(new java.awt.Dimension(70, 70));
        readyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyButtonActionPerformed(evt);
            }
        });

        leaveButton.setFont(new java.awt.Font("Frank", 0, 18)); // NOI18N
        leaveButton.setForeground(new java.awt.Color(102, 102, 102));
        leaveButton.setText("Leave");
        leaveButton.setPreferredSize(new java.awt.Dimension(70, 70));
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });

        voteButton.setFont(new java.awt.Font("Frank", 0, 20)); // NOI18N
        voteButton.setForeground(new java.awt.Color(0, 153, 153));
        voteButton.setText("Vote!");
        voteButton.setPreferredSize(new java.awt.Dimension(70, 70));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(146, 96));

        playerList.setEditable(false);
        playerList.setColumns(20);
        playerList.setFont(new java.awt.Font("Frank", 0, 18)); // NOI18N
        playerList.setForeground(new java.awt.Color(102, 102, 102));
        playerList.setRows(5);
        playerList.setText("Waiting for other player to start...");
        playerList.setWrapStyleWord(true);
        jScrollPane1.setViewportView(playerList);

        playersLabel.setFont(new java.awt.Font("Frank", 0, 36)); // NOI18N
        playersLabel.setForeground(new java.awt.Color(0, 153, 153));
        playersLabel.setText("Players");

        roundLabel.setFont(new java.awt.Font("Frank", 0, 36)); // NOI18N
        roundLabel.setForeground(new java.awt.Color(0, 153, 153));
        roundLabel.setText("Round 1");

        roleLabel.setFont(new java.awt.Font("Frank", 0, 28)); // NOI18N
        roleLabel.setForeground(new java.awt.Color(0, 153, 153));
        roleLabel.setText("You are a role");

        usernameLabel.setFont(new java.awt.Font("Frank", 0, 24)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(0, 153, 153));
        usernameLabel.setText("Username");

        phaseLabel.setFont(new java.awt.Font("Frank", 0, 52)); // NOI18N
        phaseLabel.setForeground(new java.awt.Color(0, 102, 153));
        phaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phaseLabel.setText("Day Time");

        activePlayers.setFont(new java.awt.Font("Frank", 0, 24)); // NOI18N
        activePlayers.setForeground(new java.awt.Color(102, 102, 102));

        statusLabel.setFont(new java.awt.Font("Frank", 0, 28)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 102, 102));
        statusLabel.setText("Status: alive");

        javax.swing.GroupLayout readyPaneLayout = new javax.swing.GroupLayout(readyPane);
        readyPane.setLayout(readyPaneLayout);
        readyPaneLayout.setHorizontalGroup(
            readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readyPaneLayout.createSequentialGroup()
                .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readyPaneLayout.createSequentialGroup()
                        .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(readyPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(readyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(readyPaneLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(phaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readyPaneLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(activePlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addGap(73, 73, 73))
                    .addGroup(readyPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameLabel)
                            .addComponent(roleLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statusLabel)))
                .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readyPaneLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readyPaneLayout.createSequentialGroup()
                                .addComponent(voteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(leaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readyPaneLayout.createSequentialGroup()
                        .addComponent(playersLabel)
                        .addGap(35, 35, 35))))
            .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(readyPaneLayout.createSequentialGroup()
                    .addGap(199, 199, 199)
                    .addComponent(roundLabel)
                    .addContainerGap(317, Short.MAX_VALUE)))
        );
        readyPaneLayout.setVerticalGroup(
            readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readyPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(readyPaneLayout.createSequentialGroup()
                        .addComponent(readyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(activePlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(usernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roleLabel))
                    .addGroup(readyPaneLayout.createSequentialGroup()
                        .addComponent(playersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(leaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(voteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusLabel))))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(readyPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(readyPaneLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(roundLabel)
                    .addContainerGap(394, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(readyPane, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(readyPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void readyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyButtonActionPerformed
        // TODO add your handling code here:
        JSONObject obj;
        try {
            obj = new JSONObject();
            obj.put("method", "ready");
            System.out.println("Client: " + obj);
            out.println(obj);
            
        }
        catch (JSONException ex) {
                    Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
                }
        
                readyButton.setVisible(false);
                jScrollPane1.setVisible(true);
                playersLabel.setVisible(true);
                playerList.setVisible(true);
                playerList.setLineWrap(true);
                leaveButton.setVisible(true);
                getVoteButton().setVisible(true);
                leaveButton.setEnabled(false);
                getVoteButton().setEnabled(false);
                this.revalidate();
        
    }//GEN-LAST:event_readyButtonActionPerformed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed
        // TODO add your handling code here:
        JSONObject obj;
        try {
            obj = new JSONObject();
            obj.put("method", "leave");
            System.out.println("Client: " + obj);
            out.println(obj);
        }
        catch (JSONException ex) {
                    Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
                }
        System.exit(0);
    }//GEN-LAST:event_leaveButtonActionPerformed

    public synchronized void updatePlayerList(ArrayList usernames, ArrayList active){
        String players ="";
        for(int i=0; i<usernames.size(); i++){
            players += (usernames.get(i) + "\n");
        }
        playerList.setText(players);
       

        if (role.equals("werewolf") && !isDay){
            active.remove(friend);
            active.remove(username);
        }
        
        getActivePlayers().setModel(new DefaultComboBoxModel(active.toArray()));
        if (role.equals("civilian") && !isDay){
            getActivePlayers().setVisible(false);
        }
        else {
            getActivePlayers().setVisible(true);
        }
            
        //this.revalidate();
    }
    
    public synchronized void startGame(String username, String role, String friend){
        this.username = username;
        this.role = role;
        if (role.equals("werewolf")){
            this.friend = friend;
        }
        this.isDay = true;
        this.isAlive = true;
        roleLabel.setText(role);
        usernameLabel.setText(username);
        statusLabel.setVisible(true);
        leaveButton.setEnabled(true);
        getVoteButton().setEnabled(true);
        roundLabel.setVisible(true);
        phaseLabel.setVisible(true);
        roleLabel.setVisible(true);
        usernameLabel.setVisible(true);
        this.revalidate();
    }
    
    public synchronized void updateRound(int round){
        roundLabel.setText("Round " + round);
    }
    
    public synchronized void updatePhase(String phase){
        roundLabel.setText(phase + " Time");
        if (phase.equals("day")){
            isDay = true;

            voteButtonState(true);
            
        }
        else{
            isDay = false;
            if (role.equals("civilian")){
                voteButtonState(false);
            }
        }
            
    }
    
    
    public synchronized void voteButtonState(boolean state){
        if (isAlive && voteNow)
            getVoteButton().setEnabled(state);
        else
            getVoteButton().setEnabled(false);
    }

    public synchronized void updateStatus(int status){
        if (status == 1)
            statusLabel.setText("Status: Alive");
        else {
            statusLabel.setText("Status: Dead");
            isAlive = false;
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> activePlayers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leaveButton;
    private javax.swing.JLabel phaseLabel;
    private javax.swing.JTextArea playerList;
    private javax.swing.JLabel playersLabel;
    private javax.swing.JButton readyButton;
    private javax.swing.JPanel readyPane;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JLabel roundLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JButton voteButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the out
     */
    public PrintWriter getOut() {
        return out;
    }

    /**
     * @param out the out to set
     */
    public void setOut(PrintWriter out) {
        this.out = out;
    }

    /**
     * @return the in
     */
    public BufferedReader getIn() {
        return in;
    }

    /**
     * @param in the in to set
     */
    public void setIn(BufferedReader in) {
        this.in = in;
    }

    /**
     * @return the voteNow
     */
    public boolean isVoteNow() {
        return voteNow;
    }

    /**
     * @param voteNow the voteNow to set
     */
    public void setVoteNow(boolean voteNow) {
        this.voteNow = voteNow;
    }

    /**
     * @return the voteButton
     */
    public javax.swing.JButton getVoteButton() {
        return voteButton;
    }

    /**
     * @return the activePlayers
     */
    public javax.swing.JComboBox<String> getActivePlayers() {
        return activePlayers;
    }
}
